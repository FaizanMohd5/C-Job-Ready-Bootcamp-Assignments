					Assignment - 18
			
			 A Job Ready Bootcamp in C++, DSA and IOT MySirG

				String and Functions in C Language

1. Write a function to calculate length of the string
ans)
#include<stdio.h>
int length(char str[])
{
    int i;
    for(i=0;str[i];i++);
    return i;
}
int main()
{
    char str[100];
    printf("Enter the string: ");
    scanf("%s",str);
    printf("Length of string is %d",length(str));
    return 0;
}

2. Write a function to reverse a string.
ans)
#include<stdio.h>
void strRev(char str[])
{
    int i,j,strlen;
    char temp;
    for(i=0;str[i];i++);
    strlen=i;
    i=0;
    j=strlen-1;
    while(i<=j)
    {
        temp=str[j];
        str[j]=str[i];
        str[i]=temp;
        i++;
        j--;
    }
}
int main()
{
    char str[100];
    printf("Enter a string: ");
    scanf("%s",str);
    strRev(str);
    printf("Reversed string: %s",str);
    return 0;
}

3. Write a function to compare two strings.
ans)
#include <stdio.h>
int strcmp(char str1[],char str2[])
{
    int i;
    for(i=0;str1[i] && str2[i];i++)
    {
        if(str1[i]!=str2[i])
            return 1;
    }
    return 0;
}
int main()
{
   char str1[50];
   char str2[50];
   int value;

   printf("Enter the first string : ");
   scanf("%s",str1);
   printf("Enter the second string : ");
   scanf("%s",str2);
   value = strcmp(str1,str2);
   if(value == 0)
   printf("strings are same");
   else
   printf("strings are not same");
   return 0;
}

4. Write a function to transform string into uppercase
ans)
#include<stdio.h>
char convertUpper(char ch)
{
    return ch-32;
}
int main()
{
    int i;
    char str[100],temp;
    printf("Enter a string: ");
    fgets(str,100,stdin);
    for(i=0;str[i];i++)
    {
        if(str[i]>=97 && str[i]<=122)
            str[i]=convertUpper(str[i]);
    }
    printf("%s",str);
    return 0;
}

5. Write a function to transform a string into lowercase
ans)
#include<stdio.h>
char convertLower(char ch)
{
    return ch+32;
}
int main()
{
    int i;
    char str[100],temp;
    printf("Enter a string: ");
    fgets(str,100,stdin);
    for(i=0;str[i];i++)
    {
        if(str[i]>=65 && str[i]<=90)
            str[i]=convertLower(str[i]);
    }
    printf("%s",str);
    return 0;
}

6. Write a function to check whether a given string is an alphanumeric string or not.
(Alphanumeric string must contain at least one alphabet and one digit)
ans)
#include<stdio.h>
int alphanum(char str[])
{
    int i,count=0;
    for(i=0;str[i];i++)
    {
        if(!(str[i]>='0'&&str[i]<='9'))
            count++;
    }
    return count;
}
int main()
{
    int strlen;
    char str[100];
    printf("Enter a string: ");
    scanf("%s",str);
    for(strlen=0;str[strlen];strlen++);
    if(alphanum(str)==strlen)
        printf("Not Alphanumeric\n");
    else
        printf("Alphanumeric\n");
    return 0;
}

7. Write a function to check whether a given string is palindrome or not.
ans)
#include<stdio.h>
int checkPalindrome(char str[],int i,int j)
{
    while(str[i]==str[j])
    {
        i++;
        j--;
        if(str[i]=='\0')
            return 0;
    }
    if(str[i])
        return 1;
}
int main()
{
    int i,j,strlen;
    char str[100];
    printf("Enter a string: ");
    scanf("%s",str);
    for(i=0;str[i];i++);
        strlen=i;
    i=0;
    j=strlen-1;
    if(!checkPalindrome(str,0,j))
        printf("Palindrome");
    else
        printf("Not palindrome");
    return 0;
}

8. Write a function to count words in a given string
ans)
#include<stdio.h>
int count(char str[])
{
    int i,c=0;
    for(i=0;str[i];i++)
    {
        if((str[i]==' ' || str[i]=='\n') && str[i+1]!=' ')
            c++;
    }
    return c;
}
int main()
{
    int i,j,strlen;
    char str[100];
    printf("Enter a string: ");
    fgets(str,100,stdin);
    printf("Number of words: %d",count(str));
    return 0;
}

9. Write a function to reverse a string word wise. (For example if the given string is
“Mysirg Education Services” then the resulting string should be “Services Education
Mysirg” )
ans)
#include<stdio.h>
void rev(char str[],int i,int j)
{
    char temp;
    while(i<=j)
    {
        temp=str[i];
        str[i]=str[j];
        str[j]=temp;
        i++;
        j--;
    }
}
int main()
{
    int i=0,start=0,end=0,flag=0;
    char str[]=" MySirG Education Services";
    while(str[i]!='\0')
    {
        while(str[i]!=' ')
        {
            if(str[i]=='\0')
            {
                flag=1;
                break;
            }
            end++;
            i++;
        }
        rev(str,start,end-1);
        if(flag==1)
            break;
        start=end++;
        i++;
    }
    rev(str,0,i-1);
    printf("%s",str);
    return 0;
}

10. Write a function to find the repeated character in a given string.
ans)
#include<stdio.h>
void findRepeated(char str[])
{
    int i,freq[257]={0};
    for(i=0;str[i];i++)
    {
        freq[str[i]]++;
        if(freq[str[i]]>1)
        {
                printf("%c is repeated\n",str[i]);
        }
    }
}
int main()
{
    char str[100];
    printf("Enter a string: ");
    scanf("%s",str);
    findRepeated(str);
    return 0;
}