					Assignment - 10
			 A Job Ready Bootcamp in C++, DSA and IOT MySirG

					Functions in C Language

1. Write a function to calculate the area of a circle. (TSRS)
ans)
#include<stdio.h>
float getArea(int r)
{
    return 3.14*r*r;
}
int main()
{
    int r;
    printf("Enter the radius of circle:");
    scanf("%d",&r);
    printf("Area is %.2f",getArea(r));
    return 0;
}

2. Write a function to calculate simple interest. (TSRS)
ans)
#include<stdio.h>
float showInterest(float p,float t,float r)
{
    return (p*t*r)/100.0;
}
int main()
{
    float p,t,r;
    printf("Fill the details below\n");
    printf("Priniple amount: ");
    scanf("%f",&p);
    printf("Time: ");
    scanf("%f",&t);
    printf("Rate of interest: ");
    scanf("%f",&r);
    printf("Simple interest is : %f",showInterest(p,t,r));
}


3. Write a function to check whether a given number is even or odd. Return 1 if the number is even, otherwise return0. (TSRS)
ans)
#include<stdio.h>
int EvenOdd(int num)
{
    if(num%2==0)
        return 1;
    return 0;
}
int main()
{
    int n;
    printf("Enter the number: ");
    scanf("%d",&n);
    if(EvenOdd(n))
        printf("Even");
    else
        printf("Odd");
    return 0;
}

4. Write a function to print first N natural numbers (TSRN)
ans)
#include<stdio.h>
int printNat(int range)
{
    int i;
    for(i=1;i<=range;i++)
        printf("%d ",i);
}
int main()
{
    int n;
    printf("Enter the number: ");
    scanf("%d",&n);
    printNat(n);
    return 0;
}

5. Write a function to print first N odd natural numbers. (TSRN)
ans)
#include<stdio.h>
int printOdd(int range)
{
    int i;
    for(i=1;i<=2*range;i=i+2)
            printf("%d ",i);
}
int main()
{
    int n;
    printf("Enter the number: ");
    scanf("%d",&n);
    printOdd(n);
    return 0;
}

6. Write a function to calculate the factorial of a number. (TSRS)
ans)
#include<stdio.h>
int calFact(int n)
{
    int i,fact=1;
    for(i=1;i<=n;i++)
        fact=fact*i;
    return fact;
}
int main()
{
    int n;
    printf("Enter a number:");
    scanf("%d",&n);
    printf("Factorial of %d is %d",n,calFact(n));
    return 0;
}

7. Write a function to calculate the number of combinations one can make from n items and r selected at a time.(TSRS)
ans)
#include<stdio.h>
int fact(int n)
{
    int i,f=1;
    for(i=1;i<=n;i++)
        f=f*i;
        return f;
}
int combination(int n,int r)
{
    return fact(n)/(fact(r)*fact(n-r));
}
int main()
{
    int n,r;
    printf("Enter number of items: ");
    scanf("%d",&n);
    printf("Enter number of items to be selected: ");
    scanf("%d",&r);
    printf("Number of combinations: %d",combination(n,r));
    return 0;
}


8. Write a function to calculate the number of arrangements one can make from n items and r selected at a time.(TSRS)
ans)
#include<stdio.h>
int fact(int n)
{
    int i,f=1;
    for(i=1;i<=n;i++)
        f=f*i;
        return f;
}
int permutations(int n,int r)
{
    return fact(n)/fact(n-r);
}
int main()
{
    int n,r;
    printf("Enter number of items: ");
    scanf("%d",&n);
    printf("Enter number of items to be selected: ");
    scanf("%d",&r);
    printf("Number of combinations: %d",permutations(n,r));
    return 0;
}

9. Write a function to check whether a given number contains a given digit or not.(TSRS)
ans)
#include<stdio.h>
int check(int n,int d)
{
    int rem;
    while(n)
    {
        rem=n%10;
        n=n/10;
        if(rem==d)
            return 1;
    }
    return 0;
}
int main()
{
    int n,d;
    printf("Enter a number:");
    scanf("%d",&n);
    printf("Enter a digit:");
    scanf("%d",&d);
    if(check(n,d))
        printf("The number contains %d",d);
    else
        printf("The number does'nt contain %d",d);
 

10. Write a function to print all prime factors of a given number. 
For example, if the number is 36 then your result should be 2, 2, 3, 3. (TSRN)
ans)
#include<stdio.h>
void printPf(int n)
{
    int i;
    for(i=2;n!=1;i++)
    {
        while(n%i==0)
        {
            n=n/i;
            printf("%d ",i);
        }
    }
}
int main()
{
    int n;
    printf("Enter the number:");
    scanf("%d",&n);
    printPf(n);
    return 0;
}

