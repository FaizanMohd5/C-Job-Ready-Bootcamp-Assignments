					Assignment - 24 
			     Job Ready Bootcamp in C++, DSA and IOT MySirG

					Functions in C++

1. Define a function to check whether a given number is a Prime number or not.
ans)
#include<iostream>
using namespace std;
int checkPrime(int n)
{
    int i,count=0;
    for(i=2;i<=(n/2);i++)
    {
        if(n%i==0)
        {
            count++;
        }
    }
    return count;
}
int main()
{
    int n;
    cout<<"Enter a Number:";
    cin>>n;
    if(checkPrime(n))
        cout<<"not prime";
    else
        cout<<"prime";
    return 0;
}

2. Define a function to find the highest value digit in a given number.
ans)
#include<iostream>
using namespace std;
int max(int n)
{
    int max=0,rem;
    while(n)
    {
        rem=n%10;
        if(max<rem)
            max=rem;
        n=n/10;
    }
    return max;
}
int main()
{
    int n;
    cout<<"Enter the number: ";
    cin>>n;
    cout<<endl<<"Maximum: "<<max(n);
    return 0;
}

3. Define a function to calculate x raised to the power y.
ans)
#include<iostream>
using namespace std;
int calPow(int x,int y)
{
    if(y==1)
        return x;
    return x*calPow(x,y-1);
}
int main()
{
    int x,y;
    cout<<"Enter base: ";
    cin>>x;
    cout<<"Enter power: ";
    cin>>y;
    cout<<x<<"^"<<y<<" = "<<calPow(x,y);
    return 0;
}

4. Define a function to print Pascal Triangle up to N lines.
ans)
#include<iostream>
using namespace std;
int fact(int n)
{
    if(n==1||n==0)
        return 1;
    return n*fact(n-1);
}
int comb(int n ,int r)
{
    return fact(n)/(fact(r)*fact(n-r));
}
int main()
{
    int lines,i,j,k;
    cout<<"Enter lines:";
    cin>>lines;
    for(i=0;i<lines;i++)
    {
        for(k=0;k<lines-1-i;k++)
            cout<<" ";
        for(j=0;j<=i;j++)
            cout<<" "<<comb(i,j);
        cout<<endl;
    }
    return 0;
}

5. Define a function to check whether a given number is a term in a Fibonacci series or not.
ans)
#include<iostream>
using namespace std;
int fibo(int n)
{
    int i,a=0,b=1;
    for(i=0;i<=n;i++)
    {
        if(a==n || b==n)
            return 1;
        a=a+b;
        b=a+b;
    }
    return 0;
}
int main()
{
    int n;
    cout<<"Enter the number: ";
    cin>>n;
    if(fibo(n))
        cout<<n<<" is present in fibonacci";
    else
        cout<<n<<" is'nt present in fibonacci";
    return 0;
}

6. Define a function to swap data of two int variables using call by reference
ans)
#include<iostream>
using namespace std;
void swap(int &x,int &y)
{
    int temp;
    temp=x;
    x=y;
    y=temp;
}
int main()
{
    int a,b;
    int &x=a,&y=b;
    cout<<"Enter a and b ";
    cin>>a>>b;
    swap(x,y);
    cout<<" a = "<<a<<" b = "<<b;
    return 0;
}

7. Write a function using the default argument that is able to add 2 or 3 numbers.
ans)
#include<iostream>
using namespace std;
int add(int a,int b=0,int c=0)
{
    return a+b+c;
}
int main()
{
    int a,b,c;
    cout<<"Enter two numbers:\n";
    cin>>a>>b;
    cout<<"Sum is "<<add(a,b)<<endl;
    cout<<"Enter three numbers:\n";
    cin>>a>>b>>c;
    cout<<"Sum is "<<add(a,b,c);
    return 0;
}

8. Define overloaded functions to calculate area of circle, area of rectangle and area of triangle
ans)
#include<iostream>
using namespace std;
int area(int r)
{
    return 3.14*r*r;
}
int area(int l,int b,int h)
{
    return l*b*h;
}
int area(int b, int h)
{
    return (0.5*b,h);
}
int main()
{
    double r,l,b,h;
    cout<<"Enter radius of circle: ";
    cin>>r;
    cout<<"Area is "<<area(r);
    cout<<"\nEnter lenght, breadth and height of rectangle: \n";
    cin>>l>>b>>h;
    cout<<"Area is "<<area(l,b,h);
    cout<<"\nEnter the breadth and height of triangle: ";
    cin>>b>>h;
    cout<<"Area is "<<area(b,h);    
return 0;
}

9. Write functions using function overloading to find a maximum of two numbers and
both the numbers can be integer or real.
ans)
#include<iostream>
using namespace std;
int max(int a,int b)
{
    return (a>b)?a:b;
}
float max(float a,float b)
{
    return (a>b)?a:b;
}
int main()
{
    double a,b;
    cout<<"Enter two numbers: ";
    cin>>a>>b;
    cout<<"Maximum :"<<max(a,b);
    return 0;
}

10. Write functions using function overloading to add two numbers having different data
types.
ans)
#include<iostream>
using namespace std;
int add(int a,int b)
{
    return a+b;
}
double add(double a,int b)
{
    return a+b;
}
double add(int a,double b)
{
    return a+b;
}
double add(double a,double b)
{
    return a+b;
}
int main()
{
    cout<<add(6,4)<<endl;
    cout<<add(6.4,4)<<endl;
    cout<<add(6,4.6)<<endl;
    cout<<add(6.4,3.6);
    return 0;
}