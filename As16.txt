			Assignment - 16 A Job Ready Bootcamp in C++, DSA and IOT MySirG

				Multi-Dimensional Array in C Language

1. Write a program to calculate the sum of two matrices each of order 3x3.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],b[3][3],c[3][3],i,j;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
    printf("Enter elements of MATRIX B:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\nb[%d][%d]=",i+1,j+1);
            scanf("%d",&b[i][j]);
        }
    printf("SUM OF MATRIX A AND B IS \n\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            c[i][j]=a[i][j]+b[i][j];
        }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",c[i][j]);
        printf("\n");
    }
    return 0;
}
2. Write a program to calculate the product of two matrices each of order 3x3.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],b[3][3],c[3][3],i,j,k;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
    printf("Enter elements of MATRIX B:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\nb[%d][%d]=",i+1,j+1);
            scanf("%d",&b[i][j]);
        }
    printf("PRODUCT OF MATRIX A AND B IS \n\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            c[i][j]=0;
            for(k=0;k<3;k++)
                c[i][j]=c[i][j]+a[i][k]*b[k][j];
        }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",c[i][j]);
        printf("\n");
    }
    return 0;
}
3. Write a program in C to find the transpose of a given matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    printf("\nTRANSPOSE OF A IS : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[j][i]);
        printf("\n");
    }
    return 0;
}
4. Write a program in C to find the sum of right diagonals of a matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j,sumR=0;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
            if(i==j)
                sumR=sumR+a[i][j];
    printf("Sum of right diagonals: %d",sumR);
    return 0;
}

5. Write a program in C to find the sum of left diagonals of a matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j,sumL=0;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
            if((i+j)==2)
                sumL=sumL+a[i][j];
    printf("Sum of left diagonals: %d",sumL);
    return 0;
}

6. Write a program in C to find the sum of rows and columns of a Matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j,row_sum=0,col_sum=0;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        row_sum=0; col_sum=0;
        for(j=0;j<3;j++)
        {
            row_sum=row_sum+a[i][j];
            col_sum=col_sum+a[j][i];
        }
        printf("Sum of row %d is %d\n",i+1,row_sum);
        printf("Sum of column %d is %d\n",i+1,col_sum);
    }
    return 0;
}

7. Write a program in C to print or display the lower triangular of a given matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i<j)
                a[i][j]=0;
        }
    }
    printf("Lower triangular\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    return 0;
}

8. Write a program in C to print or display an upper triangular matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            if(i>j)
                a[i][j]=0;
        }
    }
    printf("Upper triangular\n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    return 0;
}

9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j,non_zero=0,zero=0;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
            if(a[i][j]!=0)
                non_zero++;
            else
                zero++;
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    if(non_zero<zero)
        printf("Sparse matrix");
    else
        printf("Not a sparse matrix");
    return 0;
}

10. Write a program in C to find the row with maximum number of 1s.
ans)
#include<stdio.h>
int main()
{
    int a[3][3],i,j,max=0,sum=-1,index=-1;
    printf("Enter elements of MATRIX A:\n");
    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        {
            printf("\na[%d][%d]=",i+1,j+1);
            scanf("%d",&a[i][j]);
        }
        printf("MATRIX A : \n");
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
            printf("%3d",a[i][j]);
        printf("\n");
    }
    for(i=0;i<3;i++)
    {
        sum=0;
        for(j=0;j<3;j++)
        {
            if(a[i][j]==1)
                sum++;
        }
        if(sum>max)
        {
            max=sum;
            index=i;
        }
    }
    printf("The row with maximum number of 1s is %d",index+1);
    return 0;
}
