					Assignment - 19
			  A Job Ready Bootcamp in C++, DSA and IOT MySirG

			             Handling multiple Strings in C Language

1. Write a program to find the number of vowels in each of the 5 strings stored in two dimensional arrays, taken
from the user.
ans)
#include<stdio.h>
int vowel(char ch)
{
    if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u')
        return 1;
    else if(ch=='A' || ch=='E' || ch=='I' || ch=='O' || ch=='U')
        return 1;
    else
        return 0;
}
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char s[5][30];
    int i,j,count=0;
    printf("Enter five strings:\n");
    for(i=0;i<5;i++)
    {
        fgets(s[i],30,stdin);
        removeSlashN(s[i]);
    }
    for(i=0;i<5;i++)
    {
        count=0;
        for(j=0;s[i][j];j++)
            if(vowel(s[i][j]))
                count++;
        printf("\n%d volwels in string \'%s\'",count,s[i]);
    }
    return 0;
}


2. Write a program to sort 10 city names stored in two dimensional arrays, taken from the user.
ans)
#include<stdio.h>
#include<string.h>
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char s[10][30];
    char temp[20];
    int i,j;
    printf("Enter ten cities:\n");
    for(i=0;i<10;i++)
    {
        fgets(s[i],30,stdin);
        removeSlashN(s[i]);
    }
    for(i=0;i<9;i++)
    {
        for(j=i+1;j<10;j++)
        {
            if(strcmp(s[i],s[j])>0)
            {
                strcpy(temp,s[i]);
                strcpy(s[i],s[j]);
                strcpy(s[j],temp);
            }
        }
    }
    for(i=0;i<10;i++)
        printf("\n%s",s[i]);
    return 0;
}

3. Write a program to read and display a 2D array of strings in C language.
ans)
#include<stdio.h>
#include<string.h>
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char s[10][30];
    char temp[20];
    int i,j;
    printf("Enter ten strings:\n");
    for(i=0;i<10;i++)
    {
        fgets(s[i],30,stdin);
        removeSlashN(s[i]);
    }
    for(i=0;i<10;i++)
        printf("\n%s",s[i]);
    return 0;
}

4. Write a program to search a string in the list of strings.
ans)
#include<stdio.h>
#include<string.h>
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char s[10][30];
    char search[30];
    int i;
    printf("Enter 5 strings:\n");
    for(i=0;i<5;i++)
    {
        fgets(s[i],30,stdin);
        removeSlashN(s[i]);
    }
    printf("\nEnter string to be searched: ");
    fgets(search,30,stdin);
    removeSlashN(search);
    for(i=0;i<5;i++)
        if(!(strcmp(search,s[i])))
        {
            printf("%s is in the list\n",s[i]);
            break;
        }
    if(i==5)
    {
        printf("%s is not in the list\n",search);
    }
    return 0;
}

5. Suppose we have a list of email addresses, check whether all email addresses have‘@’ in it.
    Print the odd email out.
ans)
#include<stdio.h>
#include<string.h>
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char s[10][30];
    int i;
    printf("Enter 5 emails:\n");
    for(i=0;i<5;i++)
    {
        fgets(s[i],30,stdin);
        removeSlashN(s[i]);
    }
    printf("odd emails:\nThese does not contain \'@\'\n");
    for(i=0;i<5;i++)
        if(strchr(s[i],'@')==0)
            printf("%s\n",s[i]);
    return 0;
}

6. Write a program to print the strings which are palindrome in the list of strings.
ans)
#include<stdio.h>
#include<string.h>
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char s[5][30];
    int r,i,j,flag=0;
    printf("Enter 5 stings:\n");
    for(i=0;i<5;i++)
    {
        fgets(s[i],30,stdin);
        removeSlashN(s[i]);
    }
    printf("Palindromes:");
    for(r=0;r<5;r++)
    {
        i=0;
        j=strlen(s[r])-1;
        while(s[r][i]==s[r][j])
        {
            j--;
            i++;
            if(s[r][i]=='\0')
            {
                flag++; break;
            }
        }
        if(flag)
            printf("\n%s",s[r]);
    }
    if(!flag)
        printf("\nNo palindromes");
    return 0;
}

7. From the list of IP addresses, check whether all ip addresses are valid.
ans)
#include<stdio.h>
#include<string.h>
int main()
{
    int i;
    char ip[5][16]=
    {
        "123.453.56.13",
        "127.0.0.1",
        "134.45.03.37",
        "11.265.4.0",
        "167.80.9.0"
    };
    char str[5][16];
    printf("Valid IPs:\n\n");
    for(i=0;i<5;i++)
    {
        int count=0,inval=1;
        char *a;
        a=strtok(ip[i],".");
        while(a!=NULL)
        {
            strcpy(str[i],a);
            int x=atoi(a);
            if((x>=0)&&(x<=255))
            {
                printf("%d ",x);
                count++;
            }
            if(count==4)
                printf(" is valid\n");
            a=strtok(NULL,".");
        }
        if(count<4)
            printf(" is invalid\n");
        printf("\n");
    }
    return 0;
}

8. Given a list of words followed by two words, the task is to find the minimum distance
between the given two words in the list of words.
(Example : s = {“the”,”quick”,”brown”,”fox”,”quick”} word1 = “the”, word2 = “fox”, OUTPUT : 1 )
ans)
#include<stdio.h>
#include<string.h>
int main()
{
    char words[5][20]={"the","quick","brown","fox","quick"};
    char word1[]="the";
    char word2[]="fox";
    int i,w1=-1,w2=-1,min=10000,temp;
    for(i=0;i<5;i++)
    {
        if(strcmp(words[i],word1)==0)
            w1=i;
        if(strcmp(words[i],word2)==0)
            w2=i;
        if(w1!=-1&&w2!=-1)
            min=abs(w2-w1);
    }
    printf("minimum distance: %d",min-1);
    return 0;
}

9. Write a program that asks the user to enter a username. If the username entered is one of the names in the list then the user is allowed to calculate the factorial of a number. Otherwise, an error message is displayed
ans)
#include<stdio.h>
#include<string.h>
void removeSlashN(char s[])
{
    int i;
    for(i=0;s[i];i++)
        if(s[i]=='\n')
        {
            s[i]='\0';
            return;
        }
}
int main()
{
    char list[5][30]={"Abby_14","5xn","coder_67","Nvdia","Fx_1350"};
    char s[30];
    int i,n,fact=1,found=0;
    printf("\t\t\t\tFactorial Calcy\n\n");
    printf("Enter your username: ");
    fgets(s,30,stdin);
    removeSlashN(s);
    for(i=0;i<5;i++)
    {
        if(strcmp(s,list[i])==0)
        {
            found++;
            break;
        }
        else found=0;
    }
    if(found)
    {
        printf("\nEligible.\nEnter a number: ");
        scanf("%d",&n);
        for(i=1;i<=n;i++)
            fact=fact*i;
        printf("%d! = %d",n,fact);
    }
    else
        printf("Sorry username not found.\n");
    return 0;
}

10. Create an authentication system. It should be menu driven.
ans)
#include <stdio.h>
void main()
{
 char password[10], username[10],ch;
 int i;
 printf("Enter User name: ");
 gets(username);
 printf("Enter the password < any 8 characters>: ");
 for (i = 0; i < 8; i++)
 {
            ch = getchar();
            password[i] = ch;
            ch = '*' ;
            printf("%c", ch);
 }
 password[i] = '\0';
 printf("\n Your password is :");
 for (i = 0; i < 8; i++)
 {
            printf("%c", password[i]);
 }
}

